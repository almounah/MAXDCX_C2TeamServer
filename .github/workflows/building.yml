name: Building

on: workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

permissions:
  contents: write

jobs:      
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    # Update references
    - name: Git Sumbodule Update
      run: |
        git submodule update --init
    
    - name: Get Conan
      # You may pin to the exact commit or the version.
      # uses: turtlebrowser/get-conan@c171f295f3f507360ee018736a6608731aa2109d
      uses: turtlebrowser/get-conan@v1.2

    - name: Create default profile
      run: conan profile detect
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j 18

    - name: Run unit tests
      run: ctest --test-dir build 


    - name: Prep release
      run: |
        rm Release/Beacons/*
        rm Release/Beacons/.gitignore
        rm Release/Client/.gitignore
        rm Release/Client/logs/.gitignore
        rm Release/Modules/*
        rm Release/Modules/.gitignore
        rm Release/Scripts/.gitignore
        rm Release/TeamServer/.gitignore
        rm Release/Tools/.gitignore
        rm Release/www/.gitignore
        tar -zcvf Release.tar.gz Release
        

    - name: Upload release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: Release/TeamServer/Release.tar.gz
        asset_name: Release.tar.gz
        tag: ${{ github.ref }}
        overwrite: true
        body: "test release"
